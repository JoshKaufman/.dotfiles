set nocompatible              " be iMproved, required
filetype off                  " required
""""""""""""""""""""
"""" setlocal foldmethod=marker
"""""""""""""""""""

" Vundle Plugins {{{
" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
" alternatively, pass a path where Vundle should install plugins
"call vundle#begin('~/some/path/here')

" let Vundle manage Vundle, required
Plugin 'VundleVim/Vundle.vim'

"
" plugin from http://vim-scripts.org/vim/scripts.html
" want more plugins? find them at http://vimawesome.com
Plugin 'L9'
Plugin 'christoomey/vim-tmux-navigator'
Plugin 'scrooloose/nerdtree'
Plugin 'ctrlpvim/ctrlp.vim'
Plugin 'editorconfig/editorconfig-vim'
Plugin 'tpope/vim-fugitive'
Plugin 'bling/vim-airline'
Plugin 'scrooloose/syntastic'
Plugin 'airblade/vim-gitgutter'
Plugin 'altercation/vim-colors-solarized'
Plugin 'elzr/vim-json'
Plugin 'rstacruz/sparkup', {'rtp': 'vim/'}
Plugin 'mileszs/ack.vim'
Plugin 'rking/ag.vim' " trying it out as a replacement for Ack
Plugin 'bronson/vim-trailing-whitespace'
Plugin 'embear/vim-localvimrc'
Plugin 'majutsushi/tagbar' " show ctags outline
Plugin 'taglist.vim' " source code browser for c++ python etc.

" http://vimawesome.com/plugin/easymotion
" http://vimawesome.com/plugin/ultisnips-forever-and-always
Plugin 'easymotion/vim-easymotion'
Plugin 'groenewege/vim-less'
Plugin 'SirVer/ultisnips'
" http://vimawesome.com/plugin/gundo
Plugin 'sjl/gundo.vim'

" http://vimawesome.com/plugin/surround-vim
Plugin 'nathanaelkane/vim-indent-guides'
Plugin 'tpope/vim-surround'

Plugin 'jeffkreeftmeijer/vim-numbertoggle'

" block comment shortcuts
 Plugin 'scrooloose/nerdcommenter'

" http://vimawesome.com/plugin/showmarks-you-belong-with-me
" Plugin 'ShowMarks'

Plugin 'othree/yajs.vim'
Plugin 'othree/es.next.syntax.vim'
" Plugin 'pangloss/vim-javascript'
" Plugin 'jelera/vim-javascript-syntax'
" Plugin 'isRuslan/vim-es6' " def adds some color but we can probably find better

" disabled because I don't need them at the moment..
" Plugin 'kchmck/vim-coffee-script'
" Plugin 'mxw/vim-jsx'
" Plugin 'mtscout6/vim-cjsx'


" dash api https://github.com/rizzatti/dash.vim#readme
Plugin 'rizzatti/dash.vim'
Plugin 'derekwyatt/vim-scala'


Plugin 'marijnh/tern_for_vim'

Plugin 'jnurmine/zenburn'

" All of your Plugins must be added before the following line
call vundle#end()            " required
filetype plugin indent on    " required

" }}}

" Color and Schema {{{

syntax enable
set background=dark " light
let g:solarized_termcolors=256
" colorscheme solarized " lucario
colorscheme zenburn

" }}}

" Spaces, Tabs and Syntax {{{

set backspace=indent,eol,start
set list listchars=tab:»·,trail:·,eol:¬,nbsp:« " show trailing white space

" highlight LineNr term=bold cterm=NONE ctermfg=DarkGrey ctermbg=NONE gui=NONE guifg=DarkGrey guibg=NONE
autocmd BufNewFile,BufFilePre,BufRead *.md set filetype=markdown " syntax highlighting for markdown files
autocmd BufNewFile,BufFilePre,BufRead *.cql set filetype=sql " syntax highlighting for cassandra CQL

" }}}

" UI and Config {{{

set showcmd
set relativenumber " set number
set wildmenu
set lazyredraw
set scrolloff=3       " Always show at least three lines below cursor
set cursorline
set mat=3             " Blink matching brackets for 3 tenths of a second

let mapleader = ','
set autoread " If a file is changed outside of vim, automatically reload it without asking

" status line
set laststatus=2
set visualbell t_vb=  " No Noise or bell

" not sure if this is doing anything. probably airplane is overriding it
" anyway.
" -----------------------------------
" set statusline+=%<%f\ %h%m%r%{fugitive#statusline()}%=%-14.(%l,%c%V%)\ %P
" set statusline+=%#warningmsg#
" set statusline+=%{SyntasticStatuslineFlag()}
" set statusline+=%*
" -------------------------------------


" }}}

" Search and Navigation {{{

set ignorecase
set smartcase
set incsearch

nnoremap <C-e> :NERDTreeToggle<cr>
nnoremap <C-f> :NERDTreeFind<cr>
nnoremap <silent> <F9> :TagbarToggle<CR>

" quick sed;
noremap ;' :%s:::g<Left><Left><Left>
noremap ;; :%s:::cg<Left><Left><Left><Left>

" }}}

" Folding {{{

set nofoldenable " don't collapse by default
set foldmethod=syntax
let g:UltiSnipsJumpForwardTrigger="<c-b>"
let g:UltiSnipsJumpBackwardTrigger="<c-z>"

" }}}

" Movement and Shortucts {{{

nnoremap gV `[v`] " select las insert content
set suffixesadd+=.js,.jsx,.json,.es6,.es,.es2015,.css,.scss,.h,.c,.cpp,.hpp

inoremap kj <esc>
inoremap jk <esc>
inoremap jj <esc>
inoremap kk <esc>
nnoremap <C-j> <C-w>j
nnoremap <C-k> <C-w>k
nnoremap <C-h> <C-w>h
nnoremap <C-l> <C-w>l
nnoremap Q <nop>

" Indent or outdent and maintain selection in visual mode
vnoremap >> >gv
vnoremap << <gv

" not needed at the moment
" noremap <Up> <NOP>
" noremap <Down> <NOP>
" noremap <Left> <NOP>
" noremap <Right> <NOP>
" set paragraph folding for coffee-script
" autocmd BufNewFile,BufReadPost *.coffee setl foldmethod=indent nofoldenable


" }}}

" Git and Misc Plugins {{{
nnoremap <F5> :GundoToggle<CR>

set diffopt+=vertical " Always use vertical diffs
set splitright
set splitbelow

" quickfix for Ggrep and Glog
autocmd QuickFixCmdPost *grep* cwindow
autocmd QuickFixCmdPost *glog* cwindow

" fugitive config
autocmd BufReadPost fugitive://* set bufhidden=delete

" Quicker window movement
let g:syntastic_always_populate_loc_list = 1
" let g:syntastic_auto_loc_list = 1
let g:syntastic_check_on_open = 1
let g:syntastic_check_on_wq = 0


" trying a better EasyMotion setup.
" --------------------------------------
let g:EasyMotion_do_mapping = 0 " Disable default mappings

" Jump to anywhere you want with minimal keystrokes, with just one key
" binding.
" `s{char}{label}`
nmap s <Plug>(easymotion-overwin-f)
" or
" `s{char}{char}{label}`
" Need one more keystroke, but on average, it may be more comfortable.
" nmap s <Plug>(easymotion-overwin-f2)
"
" Turn on case insensitive feature
let g:EasyMotion_smartcase = 1
"
" JK motions: Line motions
map ssj <Plug>(easymotion-j)
map ssk <Plug>(easymotion-k)
" ------------------------------------------------

let g:localvimrc_name=[ ".vimrc.local" ] " load local vim configs (default is .lvimrc)
let g:localvimrc_ask=0

" Plugin Config
let g:ctrlp_show_hidden = 1
let g:syntastic_javascript_checkers = ['eslint']

set statusline+=%#warningmsg#
set statusline+=%{SyntasticStatuslineFlag()}
set statusline+=%*

let g:syntastic_always_populate_loc_list = 1
let g:syntastic_auto_loc_list = 1
let g:syntastic_check_on_open = 1
let g:syntastic_check_on_wq = 0

" }}}

" Backups {{{

set undodir=~/.vim/tmp/undo/     " undo files
set backupdir=~/.vim/tmp/backup/ " backups
set directory=~/.vim/tmp/swap/   " swap files
set tags=~/.vim/tmp/tags
set tags=tags;/ " look for tags file

" }}}

" vimrc specific display config.
" vim:foldmethod=marker:foldlevel=0

